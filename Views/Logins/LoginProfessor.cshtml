@model music_shed.Models.ViewModel.LoginViewModel
@{
    ViewData["Title"] = "Login do Professor";
}

<div class="container d-flex justify-content-center align-items-center mt-5 mb-5">
    <div class="card shadow-lg p-4" style="max-width: 500px; width: 100%;">
        <div class="text-center mb-4">
            <h2 class="fw-bold text-indigo">
                <i class="bi bi-person-badge-fill me-2"></i> Login do Professor
            </h2>
            <p class="text-muted">Bem-vindo ao MusicShed. Gerencie suas aulas com facilidade.</p>
        </div>

        <!-- Mensagem de erro do Controller -->
        @if (TempData["MensagemErro"] is string erro && !string.IsNullOrWhiteSpace(erro))
        {
            <div class="alert alert-danger text-center">@erro</div>
        }

        <!-- Validação de ModelState -->
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        <form asp-action="LoginProfessor" method="post" class="needs-validation" novalidate>
            <div class="mb-3">
                <label asp-for="Email" class="form-label">E-mail</label>
                <div class="input-group has-validation">
                    <span class="input-group-text"><i class="bi bi-envelope-fill"></i></span>
                    <input asp-for="Email" class="form-control" type="email" required />
                </div>
                <span asp-validation-for="Email" class="text-danger"></span>
                <div class="invalid-feedback">Por favor, insira um e-mail válido.</div>
            </div>

            <div class="mb-4">
                <label asp-for="Senha" class="form-label">Senha</label>
                <div class="input-group has-validation">
                    <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                    <input asp-for="Senha" class="form-control" type="password" required />
                </div>
                <span asp-validation-for="Senha" class="text-danger"></span>
                <div class="invalid-feedback">A senha é obrigatória.</div>
            </div>

            <button type="submit" class="btn btn-outline-indigo w-100 py-2 fs-5">
                <i class="bi bi-box-arrow-in-right me-2"></i> Entrar
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}